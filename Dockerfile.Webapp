# Base image
FROM python:3.12-slim

# Install PostgreSQL and other dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    rabbitmq-server \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get update \
    && apt-get install -y dos2unix \
    && apt-get install -y gcc \
    && apt-get install -y python3-dev \
    && apt-get install -y libpq-dev 

RUN mkdir -p /var/run/rabbitmq && chown -R rabbitmq:rabbitmq /var/run/rabbitmq

# Set the working directory
WORKDIR /app    

# Install Python dependencies
COPY requirements.txt /app/requirements.txt
RUN pip install -r requirements.txt

# Copy the application code
COPY . /app

RUN python webapp/manage.py collectstatic --noinput

# Copy and set up the start script for services
COPY start_services.sh /usr/local/bin/start_services.sh
RUN dos2unix /usr/local/bin/start_services.sh && chmod +x /usr/local/bin/start_services.sh

# Copy and set up the entrypoint script
COPY entrypoint.sh /usr/local/bin/entrypoint.sh
RUN dos2unix /usr/local/bin/entrypoint.sh && chmod +x /usr/local/bin/entrypoint.sh

# celery
EXPOSE 5672 15672
# django
EXPOSE 8000

USER root
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]

VOLUME /app/staticfiles

WORKDIR /app/webapp
# Replace the CMD to use Gunicorn as the production server
# CMD ["python", "webapp/manage.py", "runserver", "0.0.0.0:8000"]
# CMD ["gunicorn", "--chdir", "/app/webapp", "--bind", "0.0.0.0:8000", "webapp.wsgi:application"]
CMD ["/usr/local/bin/start_services.sh"]

